/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/playscreen_screen/PlayScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PlayScreenViewBase::PlayScreenViewBase()
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    backgroundimg.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_DAY_ID));
    backgroundimg.setPosition(0, 0, 240, 320);
    backgroundimg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    birdimg.setXY(46, 170);
    birdimg.setBitmaps(BITMAP_YELLOWBIRD_DOWNFLAP_ID, BITMAP_YELLOWBIRD_UPFLAP_ID);
    birdimg.setUpdateTicksInterval(6);
    birdimg.startAnimation(true, true, true);

    pipe1.setPosition(240, -220, 52, 740);

    uppipe_1.setXY(0, 420);
    uppipe_1.setBitmap(touchgfx::Bitmap(BITMAP_UP_PIPE_GREEN_ID));
    pipe1.add(uppipe_1);

    downpipe_1.setXY(0, 0);
    downpipe_1.setBitmap(touchgfx::Bitmap(BITMAP_DOWN_PIPE_GREEN_ID));
    pipe1.add(downpipe_1);

    box_1.setPosition(24, 320, 6, 100);
    box_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_1.setAlpha(0);
    pipe1.add(box_1);

    pipe2.setPosition(386, -220, 52, 740);

    uppipe_2.setXY(0, 420);
    uppipe_2.setBitmap(touchgfx::Bitmap(BITMAP_UP_PIPE_GREEN_ID));
    pipe2.add(uppipe_2);

    downpipe_2.setXY(0, 0);
    downpipe_2.setBitmap(touchgfx::Bitmap(BITMAP_DOWN_PIPE_GREEN_ID));
    pipe2.add(downpipe_2);

    box_2.setPosition(24, 320, 6, 100);
    box_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_2.setAlpha(0);
    pipe2.add(box_2);

    groundimg.setXY(0, 288);
    groundimg.setBitmap(touchgfx::Bitmap(BITMAP_BASE_ID));

    madebytxt.setXY(120, 68);
    madebytxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    madebytxt.setLinespacing(0);
    madebytxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M0SU));

    scoretxt.setXY(108, 15);
    scoretxt.setVisible(false);
    scoretxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scoretxt.setLinespacing(0);
    Unicode::snprintf(scoretxtBuffer, SCORETXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IJHL).getText());
    scoretxt.setWildcard(scoretxtBuffer);
    scoretxt.resizeToCurrentText();
    scoretxt.setTypedText(touchgfx::TypedText(T_TEXTID1));

    introimg.setBitmap(touchgfx::Bitmap(BITMAP_MESSAGE_ID));
    introimg.setPosition(28, 15, 184, 267);
    introimg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    add(__background);
    add(backgroundimg);
    add(birdimg);
    add(pipe1);
    add(pipe2);
    add(groundimg);
    add(madebytxt);
    add(scoretxt);
    add(introimg);
}

void PlayScreenViewBase::setupScreen()
{

}

//Handles when a key is pressed
void PlayScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(88 == key)
    {
        //Interaction1
        //When hardware button 88 clicked move groundimg
        //Move groundimg to x:0, y:0 with LinearInOut easing in 20 ms (1 Ticks)
        groundimg.clearMoveAnimationEndedAction();
        groundimg.startMoveAnimation(0, 0, 1, touchgfx::EasingEquations::linearEaseInOut, touchgfx::EasingEquations::linearEaseInOut);
    }
    if(65 == key)
    {
        //Interaction2
        //When hardware button 65 clicked change screen to EndScreen
        //Go to EndScreen with no screen transition
        application().gotoEndScreenScreenNoTransition();
    }
}
