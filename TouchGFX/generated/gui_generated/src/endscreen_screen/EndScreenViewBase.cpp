/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/endscreen_screen/EndScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

EndScreenViewBase::EndScreenViewBase()
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    backgroundimg.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_DAY_ID));
    backgroundimg.setPosition(0, 0, 240, 320);
    backgroundimg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    gameoverimg.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
    gameoverimg.setPosition(24, 84, 192, 42);
    gameoverimg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    yourscoretxt.setXY(42, 160);
    yourscoretxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    yourscoretxt.setLinespacing(0);
    yourscoretxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ELCD));

    finalscoretxt.setXY(182, 160);
    finalscoretxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    finalscoretxt.setLinespacing(0);
    Unicode::snprintf(finalscoretxtBuffer, FINALSCORETXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EDXP).getText());
    finalscoretxt.setWildcard(finalscoretxtBuffer);
    finalscoretxt.resizeToCurrentText();
    finalscoretxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BWXW));

    groundimg.setXY(-21, 288);
    groundimg.setBitmap(touchgfx::Bitmap(BITMAP_BASE_ID));

    restarttxt.setXY(10, 246);
    restarttxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    restarttxt.setLinespacing(0);
    restarttxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZHAY));

    add(__background);
    add(backgroundimg);
    add(gameoverimg);
    add(yourscoretxt);
    add(finalscoretxt);
    add(groundimg);
    add(restarttxt);
}

void EndScreenViewBase::setupScreen()
{

}

//Handles when a key is pressed
void EndScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(65 == key)
    {
        //Interaction1
        //When hardware button 65 clicked change screen to PlayScreen
        //Go to PlayScreen with no screen transition
        application().gotoPlayScreenScreenNoTransition();
    }
}
